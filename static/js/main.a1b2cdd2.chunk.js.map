{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","todoWithUser","todosWithUser","userId","usersFromServer","find","author","App","useState","titleInput","setTitleInput","userOption","setUserOption","setTodos","isDataCorrect","setIsDataCorrect","titleError","userOptionError","action","method","onSubmit","event","preventDefault","selectedUser","parseInt","maxPrevId","reduce","prev","current","state","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1b2cdd2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\n\nimport { User } from '../../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { FC } from 'react';\n\nimport cn from 'classnames';\n\nimport { TodoWithUser } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user\n        && (\n          <UserInfo user={user} />\n        )\n      }\n\n    </article>\n  );\n};\n","import { FC } from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { TodoWithUser } from '../../types';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map((todoWithUser: TodoWithUser) => (\n          <TodoInfo todo={todoWithUser} key={todoWithUser.id} />\n        ))\n      }\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { BaseSyntheticEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { Todo, User } from './types';\nimport { TodoList } from './components/TodoList';\n\nconst todosWithUser = todosFromServer.map((todo: Todo) => {\n  const user = usersFromServer.find((author: User) => (\n    author.id === todo.userId\n  ));\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [titleInput, setTitleInput] = useState('');\n\n  const [userOption, setUserOption] = useState('0');\n\n  const [todos, setTodos] = useState(todosWithUser);\n\n  const [isDataCorrect, setIsDataCorrect] = useState(true);\n\n  const handleTitleInputChange = (event: BaseSyntheticEvent) => {\n    setTitleInput(event.target.value);\n  };\n\n  const handleUserChange = (event: BaseSyntheticEvent) => {\n    setUserOption(event.target.value);\n  };\n\n  const titleError\n  = !isDataCorrect\n  && titleInput === '';\n\n  const userOptionError\n  = !isDataCorrect\n  && userOption === '0';\n\n  const handleSubmit = (event: BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (userOption === '0' || titleInput === '') {\n      setIsDataCorrect(false);\n\n      return;\n    }\n\n    const selectedUser = usersFromServer.find((author: User) => (\n      author.id === parseInt(userOption, 10)\n    ));\n\n    const maxPrevId = todos.reduce((prev, current) => {\n      return current.id > prev\n        ? current.id\n        : prev;\n    }, 0);\n\n    setTodos((state) => (\n      [\n        ...state,\n        {\n          id: maxPrevId + 1,\n          title: titleInput,\n          completed: false,\n          userId: selectedUser?.id || null,\n          user: selectedUser,\n        },\n      ]));\n\n    setIsDataCorrect(true);\n    setTitleInput('');\n    setUserOption('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleInputChange}\n            id=\"titleInput\"\n          />\n          {\n            titleError\n            && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={userOption}\n            onChange={handleUserChange}\n            id=\"userSelect\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(({ id, name }) => (\n                <option value={id} key={name}>{name}</option>\n              ))\n            }\n          </select>\n\n          {\n            userOptionError\n            && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}